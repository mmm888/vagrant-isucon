# -*- mode: ruby -*-
# vi: set ft=ruby :

box = "bento/ubuntu-14.04"
ipaddress = {
  "bench"   => "192.168.39.160",
  "image01" => "192.168.39.161",
  "image02" => "192.168.39.162",
  "image03" => "192.168.39.163",
  "api"     => "192.168.39.164",
}
memory = {
  "bench" => "1024",
  "image" => "1024",
  "api"   => "2048",
}

Vagrant.configure(2) do |config|
  config.vm.box = box

### bench
  config.vm.define "bench" do |node|
    node.vm.network "public_network", ip: ipaddress["bench"], bridge: "eno1", netmask: "255.255.0.0"
    node.vm.host_name = "bench"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = memory["bench"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      set -e
      sed -i.bak -e "s@http://us\.archive\.ubuntu\.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@g" /etc/apt/sources.list
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y git jq libyaml-dev python-dev python-pip
      pip install ansible markupsafe

      rm -rf isucon5-final
      git clone https://github.com/isucon/isucon5-final.git
      (
        cd isucon5-final/provisioning
	cat > inventory.ini <<EOF
[bench]
localhost ansible_connection=local
EOF
        PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ansible-playbook -i inventory.ini bench/ansible/*.yml
      )
      rm -rf isucon5-final
      cat > /home/isucon/bench.sh <<EOF
#!/bin/sh

(
  cd /home/isucon/isucon5-final/bench
  export ISUCON_BENCH_DATADIR=/home/isucon/isucon5-final/bench/json
  cat ../data/source.json | jq '.[0]' | gradle run -Pargs="net.isucon.isucon5f.bench.Full #{ipaddress["image"]} -p 80"
)
EOF
      chown isucon:isucon /home/isucon/bench.sh
      chmod +x /home/isucon/bench.sh
    SHELL
  end

### image01
  config.vm.define "image01" do |node|
    node.vm.network "public_network", ip: ipaddress["image01"], bridge: "eno1", netmask: "255.255.0.0"
    node.vm.host_name = "image"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = memory["image"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      set -e
      sed -i.bak -e "s@http://us\.archive\.ubuntu\.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@g" /etc/apt/sources.list
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y git libyaml-dev python-dev python-pip
      pip install ansible markupsafe

      rm -rf isucon5-final
      git clone https://github.com/isucon/isucon5-final.git
      (
        cd isucon5-final/provisioning
	cat > inventory.ini <<EOF
[guests]
localhost api_host=#{ipaddress["api"]} ansible_connection=local
EOF
        PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ansible-playbook -i inventory.ini image/ansible/*.yml
      )
      rm -rf isucon5-final
    SHELL
  end

### image02
  config.vm.define "image02" do |node|
    node.vm.network "public_network", ip: ipaddress["image02"], bridge: "eno1", netmask: "255.255.0.0"
    node.vm.host_name = "image"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = memory["image"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      set -e
      sed -i.bak -e "s@http://us\.archive\.ubuntu\.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@g" /etc/apt/sources.list
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y git libyaml-dev python-dev python-pip
      pip install ansible markupsafe

      rm -rf isucon5-final
      git clone https://github.com/isucon/isucon5-final.git
      (
        cd isucon5-final/provisioning
	cat > inventory.ini <<EOF
[guests]
localhost api_host=#{ipaddress["api"]} ansible_connection=local
EOF
        PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ansible-playbook -i inventory.ini image/ansible/*.yml
      )
      rm -rf isucon5-final
    SHELL
  end

### image03
  config.vm.define "image03" do |node|
    node.vm.network "public_network", ip: ipaddress["image03"], bridge: "eno1", netmask: "255.255.0.0"
    node.vm.host_name = "image"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = memory["image"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      set -e
      sed -i.bak -e "s@http://us\.archive\.ubuntu\.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@g" /etc/apt/sources.list
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y git libyaml-dev python-dev python-pip
      pip install ansible markupsafe

      rm -rf isucon5-final
      git clone https://github.com/isucon/isucon5-final.git
      (
        cd isucon5-final/provisioning
	cat > inventory.ini <<EOF
[guests]
localhost api_host=#{ipaddress["api"]} ansible_connection=local
EOF
        PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ansible-playbook -i inventory.ini image/ansible/*.yml
      )
      rm -rf isucon5-final
    SHELL
  end

### api
  config.vm.define "api" do |node|
    node.vm.network "public_network", ip: ipaddress["api"], bridge: "eno1", netmask: "255.255.0.0"
    node.vm.host_name = "api"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = memory["api"]
    end
    config.vm.provision "shell", inline: <<-SHELL
      set -e
      sed -i.bak -e "s@http://us\.archive\.ubuntu\.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@g" /etc/apt/sources.list
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      #apt-get install -y git libgdbm-dev libffi-dev libncurses5-dev libpq-dev libyaml-dev python-dev python-pip
      apt-get install -y git libyaml-dev python-dev python-pip
      pip install ansible markupsafe

      rm -rf isucon5-final
      git clone https://github.com/isucon/isucon5-final.git
      (
        cd isucon5-final/provisioning
	cat > inventory.ini <<EOF
[api]
localhost ansible_connection=local
EOF
        PYTHONUNBUFFERED=1 ANSIBLE_FORCE_COLOR=true ansible-playbook -i inventory.ini api/ansible/*.yml
      )
      rm -rf isucon5-final
    SHELL
  end

  #config.vm.provision "ansible" do |ansible|
  #  ansible.playbook = "ansible/playbook.yml"
  #end
end
